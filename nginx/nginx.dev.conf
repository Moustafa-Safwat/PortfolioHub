events {}

http {

    map $cookie_bot_verified $bot_allowed {
        default         0;
        "yes"           1;
    }

    server {
        listen 8020;
        server_name _;

        # Redirect all HTTP requests to HTTPS with same URI
        return 301 https://$host:8050$request_uri;
    }

    server {
        listen 8050 ssl default_server;
        server_name _;

        ssl_certificate     /etc/nginx/certs/nginx-selfsingned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

         # Hide nginx version
        server_tokens off;

        # --- Security Headers ---
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy no-referrer-when-downgrade;
        add_header Content-Security-Policy "default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;";

        location = /verify-bot {
            default_type text/html;
            return 419 '
                <html><body>
                <script>
                    document.cookie = "bot_verified=yes; path=/";
                    window.location = "/";
                </script>
                <noscript><h1>Enable JavaScript to access this site</h1></noscript>
                </body></html>
            ';
        }

        # Logging
        location /logging/ {
            proxy_pass		 http://portfolio_logging:80/;
        }

        # Backend API proxy
        location /api/ {
            if ($bot_allowed = 0) {
                return 302 /verify-bot;
            }

            proxy_pass         http://portfolio_backend:8090;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Internal-Key supersecretvalue;
        }

        # Frontend proxy (root)
        location / {
            if ($bot_allowed = 0) {
                return 302 /verify-bot;
            }

            proxy_pass         http://portfolio_frontend:3050/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
}